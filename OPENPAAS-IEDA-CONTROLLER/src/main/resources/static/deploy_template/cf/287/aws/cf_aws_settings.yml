meta:
  zones:
    z1: (( properties.template_only.aws.availability_zone ))
    z2: (( properties.template_only.aws.availability_zone2 ))

  elastic_static_ips: (( merge ))

  fog_config:
    blobstore_timeout: 5
    provider: AWS
    aws_access_key_id: (( properties.template_only.aws.access_key_id ))
    aws_secret_access_key: (( properties.template_only.aws.secret_access_key ))
    region: us-east-1

  stemcell: (( merge || .meta.default_stemcell ))

  default_stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: latest

  resource_pools:
    small:
      cloud_properties:
        instance_type: (( resource_pool_overrides.small_instance_type ))
    medium:
      cloud_properties:
          instance_type: (( resource_pool_overrides.medium_instance_type ))
    large:
      cloud_properties:
          instance_type: (( resource_pool_overrides.large_instance_type ))

resource_pool_overrides: (( merge ))

properties:
  <<: (( merge ))
  template_only: (( merge ))

  logger_endpoint:
    port: 4443

  loggregator:
    blacklisted_syslog_ranges:
    - start: 10.10.0.0
      end: 10.10.255.255

  cc: (( merge ))
#    resource_pool:
#      blobstore_type: fog
#      fog_connection: (( meta.fog_config ))
#    packages:
#      blobstore_type: fog
#      fog_connection: (( meta.fog_config ))
#    droplets:
#      blobstore_type: fog
#      fog_connection: (( meta.fog_config ))
#    buildpacks:
#      blobstore_type: fog
#      fog_connection: (( meta.fog_config ))

compilation:
  cloud_properties:
    instance_type: c4.large
    availability_zone: (( meta.zones.z1 ))

networks: (( merge ))

resource_pools:
  - name: small_z1
    cloud_properties:
      instance_type: (( meta.resource_pools.small.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( meta.zones.z1 ))

  - name: small_z2
    cloud_properties:
      instance_type: (( meta.resource_pools.small.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( meta.zones.z2 ))

  - name: medium_z1
    cloud_properties:
      instance_type: (( meta.resource_pools.medium.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( meta.zones.z1 ))

  - name: medium_z2
    cloud_properties:
      instance_type: (( meta.resource_pools.medium.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( meta.zones.z2 ))

  - name: large_z1
    cloud_properties:
      instance_type: (( meta.resource_pools.large.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 65_536
        type: gp2
      availability_zone: (( meta.zones.z1 ))

  - name: large_z2
    cloud_properties:
      instance_type: (( meta.resource_pools.large.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 65_536
        type: gp2
      availability_zone: (( meta.zones.z2 ))

  - name: router_z1
    cloud_properties:
      instance_type: (( meta.resource_pools.large.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( meta.zones.z1 ))
      #elbs: (( merge || ["cfrouter"] ))
      <<: (( merge ))

  - name: router_z2
    cloud_properties:
      instance_type: (( meta.resource_pools.large.cloud_properties.instance_type ))
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( meta.zones.z2 ))
      #elbs: (( merge || ["cfrouter"] ))
      <<: (( merge ))

  - name: small_errand
    cloud_properties:
      instance_type: t2.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( meta.zones.z1 ))

  - name: xlarge_errand
    cloud_properties:
      instance_type: c4.xlarge
      availability_zone: (( meta.zones.z1 ))

# set up static IPs
jobs:
  - name: nats_z1
    instances: (( merge || 1 ))
    networks:
      - name: cf1
        static_ips: (( static_ips(1, 2, 3) ))

  - name: blobstore_z1
    instances: (( merge || 1 ))
    networks:
      - name: cf1

  - name: postgres_z1
    instances: (( merge ))
    networks:
      - name: cf1
        static_ips: (( static_ips(6) ))

  - name: router_z1
    instances: (( merge || 1 ))
    networks:
      - name: cf1
        static_ips: (( static_ips(8, 9, 10) ))

  - name: loggregator_z1
    instances: (( merge || 0 ))
    networks:
      - name: cf1

  - name: doppler_z1
    instances: (( merge || 1 ))
    networks:
      - name: cf1

  - name: loggregator_trafficcontroller_z1
    instances: (( merge || 1 ))
    networks:
      - name: cf1

  - name: consul_z1
    instances: (( merge || 1 ))
    networks:
      - name: cf1
        static_ips: (( static_ips(18, 19, 20) ))

  - name: etcd_z1
    instances: (( merge || 1 ))
    networks:
      - name: cf1
        static_ips: (( static_ips(13, 14, 15) ))

  - name: nats_z2
    instances: (( merge || 0 ))
    networks:
      - name: cf2
        static_ips: (( static_ips(1, 2, 3) ))

  - name: router_z2
    instances: (( merge || 0 ))
    networks:
      - name: cf2
        static_ips: (( static_ips(8, 9, 10) ))

  - name: etcd_z2
    instances: (( merge || 0 ))
    networks:
      - name: cf2
        static_ips: (( static_ips(13, 14, 15) ))

  - name: consul_z2
    instances: (( merge || 0 ))
    networks:
      - name: cf2
        static_ips: (( static_ips(18, 19, 20) ))

  - name: loggregator_z2
    instances: (( merge || 0 ))
    networks:
      - name: cf2

  - name: doppler_z2
    instances: (( merge || 0 ))
    networks:
      - name: cf2

  - name: loggregator_trafficcontroller_z2
    instances: (( merge || 0 ))
    networks:
      - name: cf2

  - name: uaa_z2
    instances: (( merge || 0 ))

  - name: api_z2
    instances: (( merge || 0 ))

  - name: api_worker_z2
    instances: (( merge || 0 ))

  - name: clock_z2
    instances: (( merge || 0 ))
    
  - name: smoke_tests
    instances: (( merge || 1 ))
